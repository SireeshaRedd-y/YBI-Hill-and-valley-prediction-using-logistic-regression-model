{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#**HILL AND VALLEY PREDICTION BY USING LOGESTIC REGRESSION**\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# **Objective :**\n",
        "### The objective of using a logistic regression model to predict hill and valley regions is to classify and distinguish geographical terrain into two categories: hill regions and valley regions. This classification can be valuable in various applications, including environmental studies, urban planning, agriculture, and outdoor activities.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# **Data Source :**\n",
        "### This dataset was taken from the github library which is maintained at YBI Foundation. Each record represents 100 points on a two dimensional graph. When plotted in order (from 1 through 100) as the Y coordinate, the point will create either a Hill (a \"bump\" in the terrain) or a Valley (a \"Dip\" in the terrain).\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# **Import Library :**\n"
      ],
      "metadata": {
        "id": "-nHhXOAwjChx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "s0LKQVKbjRaV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "jzfYEnrQjZNC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "hJ6YhRNzj0qk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "9dOkWiz4B0hX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "#**Import Data :**"
      ],
      "metadata": {
        "id": "450-F6OXj8-g"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(\"https://github.com/YBI-Foundation/Dataset/raw/main/Hill%20Valley%20Dataset.csv\")"
      ],
      "metadata": {
        "id": "c-PNXrEckCgs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Describe Data :**"
      ],
      "metadata": {
        "id": "Z3hDA8M9kU4B"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "EUbcn7zEkXmv",
        "outputId": "029d90aa-ab97-4504-932d-c711adfba44d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         V1        V2        V3        V4        V5        V6        V7  \\\n",
              "0     39.02     36.49     38.20     38.85     39.38     39.74     37.02   \n",
              "1      1.83      1.71      1.77      1.77      1.68      1.78      1.80   \n",
              "2  68177.69  66138.42  72981.88  74304.33  67549.66  69367.34  69169.41   \n",
              "3  44889.06  39191.86  40728.46  38576.36  45876.06  47034.00  46611.43   \n",
              "4      5.70      5.40      5.28      5.38      5.27      5.61      6.00   \n",
              "\n",
              "         V8        V9       V10  ...       V92       V93       V94       V95  \\\n",
              "0     39.53     38.81     38.79  ...     36.62     36.92     38.80     38.52   \n",
              "1      1.70      1.75      1.78  ...      1.80      1.79      1.77      1.74   \n",
              "2  73268.61  74465.84  72503.37  ...  73438.88  71053.35  71112.62  74916.48   \n",
              "3  37668.32  40980.89  38466.15  ...  42625.67  40684.20  46960.73  44546.80   \n",
              "4      5.38      5.34      5.87  ...      5.17      5.67      5.60      5.94   \n",
              "\n",
              "        V96       V97       V98       V99      V100  Class  \n",
              "0     38.07     36.73     39.46     37.50     39.10      0  \n",
              "1      1.74      1.80      1.78      1.75      1.69      1  \n",
              "2  72571.58  66348.97  71063.72  67404.27  74920.24      1  \n",
              "3  45410.53  47139.44  43095.68  40888.34  39615.19      0  \n",
              "4      5.73      5.22      5.30      5.73      5.91      0  \n",
              "\n",
              "[5 rows x 101 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-773bfe36-c72a-4b91-ab9d-db0b493a9f07\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>V1</th>\n",
              "      <th>V2</th>\n",
              "      <th>V3</th>\n",
              "      <th>V4</th>\n",
              "      <th>V5</th>\n",
              "      <th>V6</th>\n",
              "      <th>V7</th>\n",
              "      <th>V8</th>\n",
              "      <th>V9</th>\n",
              "      <th>V10</th>\n",
              "      <th>...</th>\n",
              "      <th>V92</th>\n",
              "      <th>V93</th>\n",
              "      <th>V94</th>\n",
              "      <th>V95</th>\n",
              "      <th>V96</th>\n",
              "      <th>V97</th>\n",
              "      <th>V98</th>\n",
              "      <th>V99</th>\n",
              "      <th>V100</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>39.02</td>\n",
              "      <td>36.49</td>\n",
              "      <td>38.20</td>\n",
              "      <td>38.85</td>\n",
              "      <td>39.38</td>\n",
              "      <td>39.74</td>\n",
              "      <td>37.02</td>\n",
              "      <td>39.53</td>\n",
              "      <td>38.81</td>\n",
              "      <td>38.79</td>\n",
              "      <td>...</td>\n",
              "      <td>36.62</td>\n",
              "      <td>36.92</td>\n",
              "      <td>38.80</td>\n",
              "      <td>38.52</td>\n",
              "      <td>38.07</td>\n",
              "      <td>36.73</td>\n",
              "      <td>39.46</td>\n",
              "      <td>37.50</td>\n",
              "      <td>39.10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.83</td>\n",
              "      <td>1.71</td>\n",
              "      <td>1.77</td>\n",
              "      <td>1.77</td>\n",
              "      <td>1.68</td>\n",
              "      <td>1.78</td>\n",
              "      <td>1.80</td>\n",
              "      <td>1.70</td>\n",
              "      <td>1.75</td>\n",
              "      <td>1.78</td>\n",
              "      <td>...</td>\n",
              "      <td>1.80</td>\n",
              "      <td>1.79</td>\n",
              "      <td>1.77</td>\n",
              "      <td>1.74</td>\n",
              "      <td>1.74</td>\n",
              "      <td>1.80</td>\n",
              "      <td>1.78</td>\n",
              "      <td>1.75</td>\n",
              "      <td>1.69</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>68177.69</td>\n",
              "      <td>66138.42</td>\n",
              "      <td>72981.88</td>\n",
              "      <td>74304.33</td>\n",
              "      <td>67549.66</td>\n",
              "      <td>69367.34</td>\n",
              "      <td>69169.41</td>\n",
              "      <td>73268.61</td>\n",
              "      <td>74465.84</td>\n",
              "      <td>72503.37</td>\n",
              "      <td>...</td>\n",
              "      <td>73438.88</td>\n",
              "      <td>71053.35</td>\n",
              "      <td>71112.62</td>\n",
              "      <td>74916.48</td>\n",
              "      <td>72571.58</td>\n",
              "      <td>66348.97</td>\n",
              "      <td>71063.72</td>\n",
              "      <td>67404.27</td>\n",
              "      <td>74920.24</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>44889.06</td>\n",
              "      <td>39191.86</td>\n",
              "      <td>40728.46</td>\n",
              "      <td>38576.36</td>\n",
              "      <td>45876.06</td>\n",
              "      <td>47034.00</td>\n",
              "      <td>46611.43</td>\n",
              "      <td>37668.32</td>\n",
              "      <td>40980.89</td>\n",
              "      <td>38466.15</td>\n",
              "      <td>...</td>\n",
              "      <td>42625.67</td>\n",
              "      <td>40684.20</td>\n",
              "      <td>46960.73</td>\n",
              "      <td>44546.80</td>\n",
              "      <td>45410.53</td>\n",
              "      <td>47139.44</td>\n",
              "      <td>43095.68</td>\n",
              "      <td>40888.34</td>\n",
              "      <td>39615.19</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.70</td>\n",
              "      <td>5.40</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.61</td>\n",
              "      <td>6.00</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.87</td>\n",
              "      <td>...</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.67</td>\n",
              "      <td>5.60</td>\n",
              "      <td>5.94</td>\n",
              "      <td>5.73</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.73</td>\n",
              "      <td>5.91</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 101 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-773bfe36-c72a-4b91-ab9d-db0b493a9f07')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-18d56575-5401-4171-9df7-5f2599ce7418\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18d56575-5401-4171-9df7-5f2599ce7418')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-18d56575-5401-4171-9df7-5f2599ce7418 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-773bfe36-c72a-4b91-ab9d-db0b493a9f07 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-773bfe36-c72a-4b91-ab9d-db0b493a9f07');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G3ZXV-0IkjFs",
        "outputId": "b7b42248-7eec-48f8-bfa7-68b4cd11ed8f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "V1       1170\n",
              "V2       1170\n",
              "V3       1175\n",
              "V4       1167\n",
              "V5       1174\n",
              "         ... \n",
              "V97      1170\n",
              "V98      1179\n",
              "V99      1163\n",
              "V100     1175\n",
              "Class       2\n",
              "Length: 101, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Data Visualization :**"
      ],
      "metadata": {
        "id": "BvQaNg4IkoYw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = df.drop('Class', axis = 1)"
      ],
      "metadata": {
        "id": "wI6OyNmykpoZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x.iloc[0,:])\n",
        "plt.title('Hill');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "4EnK1LCrkzzS",
        "outputId": "3e3febcb-e2e8-4c46-efe4-a673fa1dcec3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x.iloc[0,:])\n",
        "plt.title('Valley');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "LSa8DbAKk0KV",
        "outputId": "75b6dd27-89da-4d85-970f-555b793ecfeb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x.iloc[1,:])\n",
        "plt.title('Hill');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "KZJt7Cf_k1_U",
        "outputId": "84748665-6918-4c7c-d5ac-fb647d00c347"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x.iloc[1,:])\n",
        "plt.title('Valley');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "rwYEY5GSlRJc",
        "outputId": "adcf65c3-37ca-49ea-eaa1-e3955344ba1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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s3btWnb88cezQCAg3lu+fDmbMmWKCIq98MIL2R/+8Afdiv+oo45i06ZN0x3rj3/8o27fdXV17PTTT9fly59zzjki4A1J9b527Vq2cuVKsc0JJ5zAVq5cqfNrz5o1i61Zs0asaObMmcOqqqp01poFCxaw008/XWxzwgknsLVr1wp/rd/vZ5/61KfYeeedJ461ZMkStnr1al1g5Pjx49nq1avF7xEIBNj8+fPZeeedJ7a76qqr2Jo1a3SrsI0bN+rSf2tqatiqVavEZ6qrq9m9997LqqqqxDnX1tay9evXC5dEXV0d++tf/8pWr14tVmK1tbXsk5/8pLge9fX17OGHH2YrVqwQ3yMQCLC///3vwu8OJOI1qqurxfEnTJjAtm3bxtauXSvux0ceeYStX79euE18Ph+75ppr2Jlnnik+97WvfY3V1NSIbVRVZbfccovuetx3333svffeE2Z8RVHEvc7P8dFHH2VvvfWWLlh0+fLl7MwzzxTX+swzz2Sf+tSnhAWP31urVq0S19rv97O//vWv7OSTTxbfY+rUqWzFihU6N9a9994rrEP8nlm3bp24H+bMmcP++te/spUrV4rvNmfOHPb+++/rXF133XUXW758udimsrKSPfjgg7qsiEmTJrHq6mqdlWXMmDHspJNO0gWrHnfccToXVUVFBVu8eLHYRlVVEeTNt6mtrWXLli0T39/tdrONGzfq4pCamprY2rVrxTXz+/1sypQpIoicv44//nhxr/F4Bx6AjaRlQFVVEaReWVnJbrzxRpGthaTFRVVVcc7f+c532I033ihW6EAiFd7v97NPfOITLBAIMFVV2Ve/+lVh0QXAvvCFLwiLCrfIXHvttSLOgj8zRx55JFNVVbgtuEuxsrJS/P58zJCDPrnrl/978uTJ7JRTTtEF/XIXLT/vGTNm6J5rIGG94tZj/qyvWbNG97ueeuqpbPny5boxS77WQMLFJdeN8Xg8bPHixeK7ejweds8997CTTz5ZnM/UqVPZgw8+qIv5uu2224QVC0jE4D355JO6MeOKK67QPQ+NjY3szTffZGeccYbY95VXXqmL0/P7/ezII49k9957r7CChMNh5vf7RSYckIhNee+999iDDz7IXC6XKB3BLUnXXnutmEd5/OQPfvAD9s4777Cvf/3rlNrrlOeff54B0BVx4e/JPth0L0VRmN/vFwMbjwPh++E3aHl5ubj5Z86cyS688EJd/YCdO3eyhQsXCvNzRUUFO+6448SNztMa7ZwTvXJ/mQWy8YFBHrDkbeRAx3Qvo0lVTpMEoBuo5W345/h/jcGWNTU1bPr06SwQCOjiQ4xFtf7yl7+www8/3HFxLF5oj/u+ze51n8/HqqurRVwPkIjzkAfwd999lwUCAeGWk68pkBBd8kRhdq3l75fuZQxu5EHnZWVlwsVndB+ZPWvyZAIkBM13v/td3W9uvGdqa2vZ/fffr8vYcOoq4/s7/vjj2UUXXaQ7L148kG9TU1Oji0vw+/3sn//8JwsGg+L6V1RUCOHAz5HHOPD3Zs+eLTLHAIj010wv7lqW43JisRhbuHChcGHz/cp1c9555x2RPQIkBLWqqiI2afXq1exzn/tcShEy+VpWVlayr3zlKylxUnZe/Hfj+wuFQuywww7TiYxRo0bpflu/3687ls/nY9/5zneY1+sV94ix6Fo4HE65r3j5Avk5NgvqzvQaO3YsW7x4MauoqNA9a/IrGAzqxJuxcJr8mjVrFisrKxM1Wvg5+Xw+9rnPfS5lLr3nnntEXNzs2bPzVvRMYSxpgycIgiAIgigAJREzQhAEQRBE8UJihCAIgiCIgkJihCAIgiCIgkJihCAIgiCIgkJihCAIgiCIgkJihCAIgiCIgkJihCAIgiCIgkJihCAIgiCIgkJihCAIgiCIgkJihCAIgiCIgkJihCAIgiCIgvL/AThh2aikZLZoAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x.iloc[10,:])\n",
        "plt.title('Hill');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "r2BN4nByk3FV",
        "outputId": "44297524-7e41-4ae0-e946-7a26a6c32773"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x.iloc[10,:])\n",
        "plt.title('Valley');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "JLBFZsqglexS",
        "outputId": "a2bc5b76-5404-40aa-eb75-4d13b773c239"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "# **Data Preprocessing :**"
      ],
      "metadata": {
        "id": "AkiirjAulvwI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Dje12L3Wl0Tv",
        "outputId": "0ce20d1b-e6ce-411a-f17a-873c81701c4c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1212 entries, 0 to 1211\n",
            "Columns: 101 entries, V1 to Class\n",
            "dtypes: float64(100), int64(1)\n",
            "memory usage: 956.5 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 393
        },
        "id": "ZgS0SZdGl5Jn",
        "outputId": "c60ca416-efdb-4de1-f750-08d03cb0916f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  V1             V2             V3             V4  \\\n",
              "count    1212.000000    1212.000000    1212.000000    1212.000000   \n",
              "mean     8169.091881    8144.306262    8192.653738    8176.868738   \n",
              "std     17974.950461   17881.049734   18087.938901   17991.903982   \n",
              "min         0.920000       0.900000       0.850000       0.890000   \n",
              "25%        19.602500      19.595000      18.925000      19.277500   \n",
              "50%       301.425000     295.205000     297.260000     299.720000   \n",
              "75%      5358.795000    5417.847500    5393.367500    5388.482500   \n",
              "max    117807.870000  108896.480000  119031.350000  110212.590000   \n",
              "\n",
              "                  V5             V6             V7             V8  \\\n",
              "count    1212.000000    1212.000000    1212.000000    1212.000000   \n",
              "mean     8128.297211    8173.030008    8188.582748    8183.641543   \n",
              "std     17846.757963   17927.114105   18029.562695   18048.582159   \n",
              "min         0.880000       0.860000       0.870000       0.650000   \n",
              "25%        19.210000      19.582500      18.690000      19.062500   \n",
              "50%       295.115000     294.380000     295.935000     290.850000   \n",
              "75%      5321.987500    5328.040000    5443.977500    5283.655000   \n",
              "max    113000.470000  116848.390000  115609.240000  118522.320000   \n",
              "\n",
              "                  V9            V10  ...            V92            V93  \\\n",
              "count    1212.000000    1212.000000  ...    1212.000000    1212.000000   \n",
              "mean     8154.670066    8120.767574  ...    8120.056815    8125.917409   \n",
              "std     17982.390713   17900.798206  ...   17773.190621   17758.182403   \n",
              "min         0.650000       0.620000  ...       0.870000       0.900000   \n",
              "25%        19.532500      19.285000  ...      19.197500      18.895000   \n",
              "50%       294.565000     295.160000  ...     297.845000     295.420000   \n",
              "75%      5378.180000    5319.097500  ...    5355.355000    5386.037500   \n",
              "max    112895.900000  117798.300000  ...  113858.680000  112948.830000   \n",
              "\n",
              "                 V94            V95            V96            V97  \\\n",
              "count    1212.000000    1212.000000    1212.000000    1212.000000   \n",
              "mean     8158.793812    8140.885421    8213.480611    8185.594002   \n",
              "std     17919.510371   17817.945646   18016.445265   17956.084223   \n",
              "min         0.870000       0.880000       0.890000       0.890000   \n",
              "25%        19.237500      19.385000      19.027500      19.135000   \n",
              "50%       299.155000     293.355000     301.370000     296.960000   \n",
              "75%      5286.385000    5345.797500    5300.890000    5361.047500   \n",
              "max    112409.570000  112933.730000  112037.220000  115110.420000   \n",
              "\n",
              "                 V98            V99           V100        Class  \n",
              "count    1212.000000    1212.000000    1212.000000  1212.000000  \n",
              "mean     8140.195355    8192.960891    8156.197376     0.500000  \n",
              "std     17768.356106   18064.781479   17829.310973     0.500206  \n",
              "min         0.860000       0.910000       0.890000     0.000000  \n",
              "25%        19.205000      18.812500      19.145000     0.000000  \n",
              "50%       300.925000     299.200000     302.275000     0.500000  \n",
              "75%      5390.850000    5288.712500    5357.847500     1.000000  \n",
              "max    116431.960000  113291.960000  114533.760000     1.000000  \n",
              "\n",
              "[8 rows x 101 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-3908e7e4-0b4f-4ad2-85b4-7ee7f0403af6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>V1</th>\n",
              "      <th>V2</th>\n",
              "      <th>V3</th>\n",
              "      <th>V4</th>\n",
              "      <th>V5</th>\n",
              "      <th>V6</th>\n",
              "      <th>V7</th>\n",
              "      <th>V8</th>\n",
              "      <th>V9</th>\n",
              "      <th>V10</th>\n",
              "      <th>...</th>\n",
              "      <th>V92</th>\n",
              "      <th>V93</th>\n",
              "      <th>V94</th>\n",
              "      <th>V95</th>\n",
              "      <th>V96</th>\n",
              "      <th>V97</th>\n",
              "      <th>V98</th>\n",
              "      <th>V99</th>\n",
              "      <th>V100</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "      <td>1212.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>8169.091881</td>\n",
              "      <td>8144.306262</td>\n",
              "      <td>8192.653738</td>\n",
              "      <td>8176.868738</td>\n",
              "      <td>8128.297211</td>\n",
              "      <td>8173.030008</td>\n",
              "      <td>8188.582748</td>\n",
              "      <td>8183.641543</td>\n",
              "      <td>8154.670066</td>\n",
              "      <td>8120.767574</td>\n",
              "      <td>...</td>\n",
              "      <td>8120.056815</td>\n",
              "      <td>8125.917409</td>\n",
              "      <td>8158.793812</td>\n",
              "      <td>8140.885421</td>\n",
              "      <td>8213.480611</td>\n",
              "      <td>8185.594002</td>\n",
              "      <td>8140.195355</td>\n",
              "      <td>8192.960891</td>\n",
              "      <td>8156.197376</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>17974.950461</td>\n",
              "      <td>17881.049734</td>\n",
              "      <td>18087.938901</td>\n",
              "      <td>17991.903982</td>\n",
              "      <td>17846.757963</td>\n",
              "      <td>17927.114105</td>\n",
              "      <td>18029.562695</td>\n",
              "      <td>18048.582159</td>\n",
              "      <td>17982.390713</td>\n",
              "      <td>17900.798206</td>\n",
              "      <td>...</td>\n",
              "      <td>17773.190621</td>\n",
              "      <td>17758.182403</td>\n",
              "      <td>17919.510371</td>\n",
              "      <td>17817.945646</td>\n",
              "      <td>18016.445265</td>\n",
              "      <td>17956.084223</td>\n",
              "      <td>17768.356106</td>\n",
              "      <td>18064.781479</td>\n",
              "      <td>17829.310973</td>\n",
              "      <td>0.500206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.920000</td>\n",
              "      <td>0.900000</td>\n",
              "      <td>0.850000</td>\n",
              "      <td>0.890000</td>\n",
              "      <td>0.880000</td>\n",
              "      <td>0.860000</td>\n",
              "      <td>0.870000</td>\n",
              "      <td>0.650000</td>\n",
              "      <td>0.650000</td>\n",
              "      <td>0.620000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.870000</td>\n",
              "      <td>0.900000</td>\n",
              "      <td>0.870000</td>\n",
              "      <td>0.880000</td>\n",
              "      <td>0.890000</td>\n",
              "      <td>0.890000</td>\n",
              "      <td>0.860000</td>\n",
              "      <td>0.910000</td>\n",
              "      <td>0.890000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>19.602500</td>\n",
              "      <td>19.595000</td>\n",
              "      <td>18.925000</td>\n",
              "      <td>19.277500</td>\n",
              "      <td>19.210000</td>\n",
              "      <td>19.582500</td>\n",
              "      <td>18.690000</td>\n",
              "      <td>19.062500</td>\n",
              "      <td>19.532500</td>\n",
              "      <td>19.285000</td>\n",
              "      <td>...</td>\n",
              "      <td>19.197500</td>\n",
              "      <td>18.895000</td>\n",
              "      <td>19.237500</td>\n",
              "      <td>19.385000</td>\n",
              "      <td>19.027500</td>\n",
              "      <td>19.135000</td>\n",
              "      <td>19.205000</td>\n",
              "      <td>18.812500</td>\n",
              "      <td>19.145000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>301.425000</td>\n",
              "      <td>295.205000</td>\n",
              "      <td>297.260000</td>\n",
              "      <td>299.720000</td>\n",
              "      <td>295.115000</td>\n",
              "      <td>294.380000</td>\n",
              "      <td>295.935000</td>\n",
              "      <td>290.850000</td>\n",
              "      <td>294.565000</td>\n",
              "      <td>295.160000</td>\n",
              "      <td>...</td>\n",
              "      <td>297.845000</td>\n",
              "      <td>295.420000</td>\n",
              "      <td>299.155000</td>\n",
              "      <td>293.355000</td>\n",
              "      <td>301.370000</td>\n",
              "      <td>296.960000</td>\n",
              "      <td>300.925000</td>\n",
              "      <td>299.200000</td>\n",
              "      <td>302.275000</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>5358.795000</td>\n",
              "      <td>5417.847500</td>\n",
              "      <td>5393.367500</td>\n",
              "      <td>5388.482500</td>\n",
              "      <td>5321.987500</td>\n",
              "      <td>5328.040000</td>\n",
              "      <td>5443.977500</td>\n",
              "      <td>5283.655000</td>\n",
              "      <td>5378.180000</td>\n",
              "      <td>5319.097500</td>\n",
              "      <td>...</td>\n",
              "      <td>5355.355000</td>\n",
              "      <td>5386.037500</td>\n",
              "      <td>5286.385000</td>\n",
              "      <td>5345.797500</td>\n",
              "      <td>5300.890000</td>\n",
              "      <td>5361.047500</td>\n",
              "      <td>5390.850000</td>\n",
              "      <td>5288.712500</td>\n",
              "      <td>5357.847500</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>117807.870000</td>\n",
              "      <td>108896.480000</td>\n",
              "      <td>119031.350000</td>\n",
              "      <td>110212.590000</td>\n",
              "      <td>113000.470000</td>\n",
              "      <td>116848.390000</td>\n",
              "      <td>115609.240000</td>\n",
              "      <td>118522.320000</td>\n",
              "      <td>112895.900000</td>\n",
              "      <td>117798.300000</td>\n",
              "      <td>...</td>\n",
              "      <td>113858.680000</td>\n",
              "      <td>112948.830000</td>\n",
              "      <td>112409.570000</td>\n",
              "      <td>112933.730000</td>\n",
              "      <td>112037.220000</td>\n",
              "      <td>115110.420000</td>\n",
              "      <td>116431.960000</td>\n",
              "      <td>113291.960000</td>\n",
              "      <td>114533.760000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 101 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3908e7e4-0b4f-4ad2-85b4-7ee7f0403af6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-43ae443e-5979-4757-8750-e8338493d063\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43ae443e-5979-4757-8750-e8338493d063')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-43ae443e-5979-4757-8750-e8338493d063 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3908e7e4-0b4f-4ad2-85b4-7ee7f0403af6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3908e7e4-0b4f-4ad2-85b4-7ee7f0403af6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "fCxkEL8_mA7w",
        "outputId": "552d9255-2874-4d0d-83cb-b0982d9172d4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             V1        V2        V3        V4        V5        V6        V7  \\\n",
              "V1     1.000000  0.997913  0.997474  0.996836  0.997504  0.997031  0.996955   \n",
              "V2     0.997913  1.000000  0.997282  0.997968  0.997898  0.997695  0.997092   \n",
              "V3     0.997474  0.997282  1.000000  0.997536  0.997006  0.997304  0.997769   \n",
              "V4     0.996836  0.997968  0.997536  1.000000  0.996323  0.997301  0.997757   \n",
              "V5     0.997504  0.997898  0.997006  0.996323  1.000000  0.997544  0.997193   \n",
              "...         ...       ...       ...       ...       ...       ...       ...   \n",
              "V97    0.996920  0.997392  0.997464  0.996875  0.997541  0.997264  0.997192   \n",
              "V98    0.997579  0.997017  0.998029  0.996848  0.996853  0.996668  0.996777   \n",
              "V99    0.997179  0.998146  0.997380  0.996653  0.997107  0.997119  0.996227   \n",
              "V100   0.997160  0.996831  0.996828  0.996474  0.996717  0.996060  0.996095   \n",
              "Class  0.014234  0.017846  0.016048  0.017784  0.019770  0.016607  0.021330   \n",
              "\n",
              "             V8        V9       V10  ...       V92       V93       V94  \\\n",
              "V1     0.995641  0.996585  0.996782  ...  0.995848  0.997085  0.996515   \n",
              "V2     0.997003  0.997311  0.996964  ...  0.996892  0.997146  0.996844   \n",
              "V3     0.996809  0.997386  0.996500  ...  0.995675  0.996678  0.996689   \n",
              "V4     0.996785  0.996948  0.995435  ...  0.996158  0.996328  0.996771   \n",
              "V5     0.997124  0.997369  0.996842  ...  0.996095  0.997151  0.996606   \n",
              "...         ...       ...       ...  ...       ...       ...       ...   \n",
              "V97    0.996062  0.996727  0.995315  ...  0.995558  0.996625  0.996737   \n",
              "V98    0.995617  0.996673  0.996167  ...  0.995520  0.996693  0.995911   \n",
              "V99    0.996472  0.996865  0.996830  ...  0.996641  0.997070  0.996579   \n",
              "V100   0.994905  0.996150  0.994800  ...  0.996729  0.997585  0.997237   \n",
              "Class  0.025570  0.020102  0.024254  ...  0.021514  0.018398  0.018623   \n",
              "\n",
              "            V95       V96       V97       V98       V99      V100     Class  \n",
              "V1     0.997221  0.997464  0.996920  0.997579  0.997179  0.997160  0.014234  \n",
              "V2     0.997279  0.997485  0.997392  0.997017  0.998146  0.996831  0.017846  \n",
              "V3     0.996802  0.997871  0.997464  0.998029  0.997380  0.996828  0.016048  \n",
              "V4     0.996147  0.996612  0.996875  0.996848  0.996653  0.996474  0.017784  \n",
              "V5     0.996737  0.997191  0.997541  0.996853  0.997107  0.996717  0.019770  \n",
              "...         ...       ...       ...       ...       ...       ...       ...  \n",
              "V97    0.996810  0.997471  1.000000  0.997863  0.996998  0.996464  0.017332  \n",
              "V98    0.996857  0.997564  0.997863  1.000000  0.996739  0.997016  0.016664  \n",
              "V99    0.997334  0.997802  0.996998  0.996739  1.000000  0.996804  0.017590  \n",
              "V100   0.997309  0.997293  0.996464  0.997016  0.996804  1.000000  0.016890  \n",
              "Class  0.019625  0.015894  0.017332  0.016664  0.017590  0.016890  1.000000  \n",
              "\n",
              "[101 rows x 101 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-d602fdb5-fc50-46ba-96fc-448128e9bd68\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>V1</th>\n",
              "      <th>V2</th>\n",
              "      <th>V3</th>\n",
              "      <th>V4</th>\n",
              "      <th>V5</th>\n",
              "      <th>V6</th>\n",
              "      <th>V7</th>\n",
              "      <th>V8</th>\n",
              "      <th>V9</th>\n",
              "      <th>V10</th>\n",
              "      <th>...</th>\n",
              "      <th>V92</th>\n",
              "      <th>V93</th>\n",
              "      <th>V94</th>\n",
              "      <th>V95</th>\n",
              "      <th>V96</th>\n",
              "      <th>V97</th>\n",
              "      <th>V98</th>\n",
              "      <th>V99</th>\n",
              "      <th>V100</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>V1</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.997913</td>\n",
              "      <td>0.997474</td>\n",
              "      <td>0.996836</td>\n",
              "      <td>0.997504</td>\n",
              "      <td>0.997031</td>\n",
              "      <td>0.996955</td>\n",
              "      <td>0.995641</td>\n",
              "      <td>0.996585</td>\n",
              "      <td>0.996782</td>\n",
              "      <td>...</td>\n",
              "      <td>0.995848</td>\n",
              "      <td>0.997085</td>\n",
              "      <td>0.996515</td>\n",
              "      <td>0.997221</td>\n",
              "      <td>0.997464</td>\n",
              "      <td>0.996920</td>\n",
              "      <td>0.997579</td>\n",
              "      <td>0.997179</td>\n",
              "      <td>0.997160</td>\n",
              "      <td>0.014234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>V2</th>\n",
              "      <td>0.997913</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.997282</td>\n",
              "      <td>0.997968</td>\n",
              "      <td>0.997898</td>\n",
              "      <td>0.997695</td>\n",
              "      <td>0.997092</td>\n",
              "      <td>0.997003</td>\n",
              "      <td>0.997311</td>\n",
              "      <td>0.996964</td>\n",
              "      <td>...</td>\n",
              "      <td>0.996892</td>\n",
              "      <td>0.997146</td>\n",
              "      <td>0.996844</td>\n",
              "      <td>0.997279</td>\n",
              "      <td>0.997485</td>\n",
              "      <td>0.997392</td>\n",
              "      <td>0.997017</td>\n",
              "      <td>0.998146</td>\n",
              "      <td>0.996831</td>\n",
              "      <td>0.017846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>V3</th>\n",
              "      <td>0.997474</td>\n",
              "      <td>0.997282</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.997536</td>\n",
              "      <td>0.997006</td>\n",
              "      <td>0.997304</td>\n",
              "      <td>0.997769</td>\n",
              "      <td>0.996809</td>\n",
              "      <td>0.997386</td>\n",
              "      <td>0.996500</td>\n",
              "      <td>...</td>\n",
              "      <td>0.995675</td>\n",
              "      <td>0.996678</td>\n",
              "      <td>0.996689</td>\n",
              "      <td>0.996802</td>\n",
              "      <td>0.997871</td>\n",
              "      <td>0.997464</td>\n",
              "      <td>0.998029</td>\n",
              "      <td>0.997380</td>\n",
              "      <td>0.996828</td>\n",
              "      <td>0.016048</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>V4</th>\n",
              "      <td>0.996836</td>\n",
              "      <td>0.997968</td>\n",
              "      <td>0.997536</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.996323</td>\n",
              "      <td>0.997301</td>\n",
              "      <td>0.997757</td>\n",
              "      <td>0.996785</td>\n",
              "      <td>0.996948</td>\n",
              "      <td>0.995435</td>\n",
              "      <td>...</td>\n",
              "      <td>0.996158</td>\n",
              "      <td>0.996328</td>\n",
              "      <td>0.996771</td>\n",
              "      <td>0.996147</td>\n",
              "      <td>0.996612</td>\n",
              "      <td>0.996875</td>\n",
              "      <td>0.996848</td>\n",
              "      <td>0.996653</td>\n",
              "      <td>0.996474</td>\n",
              "      <td>0.017784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>V5</th>\n",
              "      <td>0.997504</td>\n",
              "      <td>0.997898</td>\n",
              "      <td>0.997006</td>\n",
              "      <td>0.996323</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.997544</td>\n",
              "      <td>0.997193</td>\n",
              "      <td>0.997124</td>\n",
              "      <td>0.997369</td>\n",
              "      <td>0.996842</td>\n",
              "      <td>...</td>\n",
              "      <td>0.996095</td>\n",
              "      <td>0.997151</td>\n",
              "      <td>0.996606</td>\n",
              "      <td>0.996737</td>\n",
              "      <td>0.997191</td>\n",
              "      <td>0.997541</td>\n",
              "      <td>0.996853</td>\n",
              "      <td>0.997107</td>\n",
              "      <td>0.996717</td>\n",
              "      <td>0.019770</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>V97</th>\n",
              "      <td>0.996920</td>\n",
              "      <td>0.997392</td>\n",
              "      <td>0.997464</td>\n",
              "      <td>0.996875</td>\n",
              "      <td>0.997541</td>\n",
              "      <td>0.997264</td>\n",
              "      <td>0.997192</td>\n",
              "      <td>0.996062</td>\n",
              "      <td>0.996727</td>\n",
              "      <td>0.995315</td>\n",
              "      <td>...</td>\n",
              "      <td>0.995558</td>\n",
              "      <td>0.996625</td>\n",
              "      <td>0.996737</td>\n",
              "      <td>0.996810</td>\n",
              "      <td>0.997471</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.997863</td>\n",
              "      <td>0.996998</td>\n",
              "      <td>0.996464</td>\n",
              "      <td>0.017332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>V98</th>\n",
              "      <td>0.997579</td>\n",
              "      <td>0.997017</td>\n",
              "      <td>0.998029</td>\n",
              "      <td>0.996848</td>\n",
              "      <td>0.996853</td>\n",
              "      <td>0.996668</td>\n",
              "      <td>0.996777</td>\n",
              "      <td>0.995617</td>\n",
              "      <td>0.996673</td>\n",
              "      <td>0.996167</td>\n",
              "      <td>...</td>\n",
              "      <td>0.995520</td>\n",
              "      <td>0.996693</td>\n",
              "      <td>0.995911</td>\n",
              "      <td>0.996857</td>\n",
              "      <td>0.997564</td>\n",
              "      <td>0.997863</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.996739</td>\n",
              "      <td>0.997016</td>\n",
              "      <td>0.016664</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>V99</th>\n",
              "      <td>0.997179</td>\n",
              "      <td>0.998146</td>\n",
              "      <td>0.997380</td>\n",
              "      <td>0.996653</td>\n",
              "      <td>0.997107</td>\n",
              "      <td>0.997119</td>\n",
              "      <td>0.996227</td>\n",
              "      <td>0.996472</td>\n",
              "      <td>0.996865</td>\n",
              "      <td>0.996830</td>\n",
              "      <td>...</td>\n",
              "      <td>0.996641</td>\n",
              "      <td>0.997070</td>\n",
              "      <td>0.996579</td>\n",
              "      <td>0.997334</td>\n",
              "      <td>0.997802</td>\n",
              "      <td>0.996998</td>\n",
              "      <td>0.996739</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.996804</td>\n",
              "      <td>0.017590</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>V100</th>\n",
              "      <td>0.997160</td>\n",
              "      <td>0.996831</td>\n",
              "      <td>0.996828</td>\n",
              "      <td>0.996474</td>\n",
              "      <td>0.996717</td>\n",
              "      <td>0.996060</td>\n",
              "      <td>0.996095</td>\n",
              "      <td>0.994905</td>\n",
              "      <td>0.996150</td>\n",
              "      <td>0.994800</td>\n",
              "      <td>...</td>\n",
              "      <td>0.996729</td>\n",
              "      <td>0.997585</td>\n",
              "      <td>0.997237</td>\n",
              "      <td>0.997309</td>\n",
              "      <td>0.997293</td>\n",
              "      <td>0.996464</td>\n",
              "      <td>0.997016</td>\n",
              "      <td>0.996804</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.016890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Class</th>\n",
              "      <td>0.014234</td>\n",
              "      <td>0.017846</td>\n",
              "      <td>0.016048</td>\n",
              "      <td>0.017784</td>\n",
              "      <td>0.019770</td>\n",
              "      <td>0.016607</td>\n",
              "      <td>0.021330</td>\n",
              "      <td>0.025570</td>\n",
              "      <td>0.020102</td>\n",
              "      <td>0.024254</td>\n",
              "      <td>...</td>\n",
              "      <td>0.021514</td>\n",
              "      <td>0.018398</td>\n",
              "      <td>0.018623</td>\n",
              "      <td>0.019625</td>\n",
              "      <td>0.015894</td>\n",
              "      <td>0.017332</td>\n",
              "      <td>0.016664</td>\n",
              "      <td>0.017590</td>\n",
              "      <td>0.016890</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>101 rows × 101 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d602fdb5-fc50-46ba-96fc-448128e9bd68')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-dbc251d8-e550-4c2d-8d88-c9d8319c1b89\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbc251d8-e550-4c2d-8d88-c9d8319c1b89')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-dbc251d8-e550-4c2d-8d88-c9d8319c1b89 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d602fdb5-fc50-46ba-96fc-448128e9bd68 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d602fdb5-fc50-46ba-96fc-448128e9bd68');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.dropna()"
      ],
      "metadata": {
        "id": "fA9Prv-SmNbK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Defining Feature Variables (X) And Target Variable (Y) :**"
      ],
      "metadata": {
        "id": "HhbSv08nmUYM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6t8OM_6GmV1N",
        "outputId": "7325337e-1698-4f51-97b9-cec504b25a0d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\n",
              "       ...\n",
              "       'V92', 'V93', 'V94', 'V95', 'V96', 'V97', 'V98', 'V99', 'V100',\n",
              "       'Class'],\n",
              "      dtype='object', length=101)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### For defining X variable we can use df.drop function instead of mentioning each attribute ('V1', 'V2', 'V3',......)\n",
        "\n"
      ],
      "metadata": {
        "id": "DYoMzQNMmdWZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = df.drop('Class', axis = 1)"
      ],
      "metadata": {
        "id": "hbvNt1Nxmms0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0H0z5pLRmwAp",
        "outputId": "20db7de7-8e54-4e60-ca3d-7e1b124a86c3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1212, 100)"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "3KJEiQeXmxxX",
        "outputId": "ebdd430f-18cd-4ab8-8617-3504db20edbf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            V1        V2        V3        V4        V5        V6        V7  \\\n",
              "0        39.02     36.49     38.20     38.85     39.38     39.74     37.02   \n",
              "1         1.83      1.71      1.77      1.77      1.68      1.78      1.80   \n",
              "2     68177.69  66138.42  72981.88  74304.33  67549.66  69367.34  69169.41   \n",
              "3     44889.06  39191.86  40728.46  38576.36  45876.06  47034.00  46611.43   \n",
              "4         5.70      5.40      5.28      5.38      5.27      5.61      6.00   \n",
              "...        ...       ...       ...       ...       ...       ...       ...   \n",
              "1207     13.00     12.87     13.27     13.04     13.19     12.53     14.31   \n",
              "1208     48.66     50.11     48.55     50.43     50.09     49.67     48.95   \n",
              "1209  10160.65   9048.63   8994.94   9514.39   9814.74  10195.24  10031.47   \n",
              "1210     34.81     35.07     34.98     32.37     34.16     34.03     33.31   \n",
              "1211   8489.43   7672.98   9132.14   7985.73   8226.85   8554.28   8838.87   \n",
              "\n",
              "            V8        V9       V10  ...       V91       V92       V93  \\\n",
              "0        39.53     38.81     38.79  ...     37.57     36.62     36.92   \n",
              "1         1.70      1.75      1.78  ...      1.71      1.80      1.79   \n",
              "2     73268.61  74465.84  72503.37  ...  69384.71  73438.88  71053.35   \n",
              "3     37668.32  40980.89  38466.15  ...  47653.60  42625.67  40684.20   \n",
              "4         5.38      5.34      5.87  ...      5.52      5.17      5.67   \n",
              "...        ...       ...       ...  ...       ...       ...       ...   \n",
              "1207     13.33     13.63     14.55  ...     12.89     12.48     12.15   \n",
              "1208     48.65     48.63     48.61  ...     47.45     46.93     49.61   \n",
              "1209  10202.28   9152.99   9591.75  ...  10413.41   9068.11   9191.80   \n",
              "1210     32.48     35.63     32.48  ...     33.18     32.76     35.03   \n",
              "1211   8967.24   8635.14   8544.37  ...   7747.70   8609.73   9209.48   \n",
              "\n",
              "           V94       V95       V96       V97       V98       V99      V100  \n",
              "0        38.80     38.52     38.07     36.73     39.46     37.50     39.10  \n",
              "1         1.77      1.74      1.74      1.80      1.78      1.75      1.69  \n",
              "2     71112.62  74916.48  72571.58  66348.97  71063.72  67404.27  74920.24  \n",
              "3     46960.73  44546.80  45410.53  47139.44  43095.68  40888.34  39615.19  \n",
              "4         5.60      5.94      5.73      5.22      5.30      5.73      5.91  \n",
              "...        ...       ...       ...       ...       ...       ...       ...  \n",
              "1207     13.15     12.35     13.58     13.86     12.88     13.87     13.51  \n",
              "1208     47.16     48.17     47.94     49.81     49.89     47.43     47.77  \n",
              "1209   9275.04   9848.18   9074.17   9601.74  10366.24   8997.60   9305.77  \n",
              "1210     32.89     31.91     33.85     35.28     32.49     32.83     34.82  \n",
              "1211   8496.33   8724.01   8219.99   8550.86   8679.43   8389.31   8712.80  \n",
              "\n",
              "[1212 rows x 100 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-f47d6831-765b-4bea-84a1-d2c563b7ba14\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>V1</th>\n",
              "      <th>V2</th>\n",
              "      <th>V3</th>\n",
              "      <th>V4</th>\n",
              "      <th>V5</th>\n",
              "      <th>V6</th>\n",
              "      <th>V7</th>\n",
              "      <th>V8</th>\n",
              "      <th>V9</th>\n",
              "      <th>V10</th>\n",
              "      <th>...</th>\n",
              "      <th>V91</th>\n",
              "      <th>V92</th>\n",
              "      <th>V93</th>\n",
              "      <th>V94</th>\n",
              "      <th>V95</th>\n",
              "      <th>V96</th>\n",
              "      <th>V97</th>\n",
              "      <th>V98</th>\n",
              "      <th>V99</th>\n",
              "      <th>V100</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>39.02</td>\n",
              "      <td>36.49</td>\n",
              "      <td>38.20</td>\n",
              "      <td>38.85</td>\n",
              "      <td>39.38</td>\n",
              "      <td>39.74</td>\n",
              "      <td>37.02</td>\n",
              "      <td>39.53</td>\n",
              "      <td>38.81</td>\n",
              "      <td>38.79</td>\n",
              "      <td>...</td>\n",
              "      <td>37.57</td>\n",
              "      <td>36.62</td>\n",
              "      <td>36.92</td>\n",
              "      <td>38.80</td>\n",
              "      <td>38.52</td>\n",
              "      <td>38.07</td>\n",
              "      <td>36.73</td>\n",
              "      <td>39.46</td>\n",
              "      <td>37.50</td>\n",
              "      <td>39.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.83</td>\n",
              "      <td>1.71</td>\n",
              "      <td>1.77</td>\n",
              "      <td>1.77</td>\n",
              "      <td>1.68</td>\n",
              "      <td>1.78</td>\n",
              "      <td>1.80</td>\n",
              "      <td>1.70</td>\n",
              "      <td>1.75</td>\n",
              "      <td>1.78</td>\n",
              "      <td>...</td>\n",
              "      <td>1.71</td>\n",
              "      <td>1.80</td>\n",
              "      <td>1.79</td>\n",
              "      <td>1.77</td>\n",
              "      <td>1.74</td>\n",
              "      <td>1.74</td>\n",
              "      <td>1.80</td>\n",
              "      <td>1.78</td>\n",
              "      <td>1.75</td>\n",
              "      <td>1.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>68177.69</td>\n",
              "      <td>66138.42</td>\n",
              "      <td>72981.88</td>\n",
              "      <td>74304.33</td>\n",
              "      <td>67549.66</td>\n",
              "      <td>69367.34</td>\n",
              "      <td>69169.41</td>\n",
              "      <td>73268.61</td>\n",
              "      <td>74465.84</td>\n",
              "      <td>72503.37</td>\n",
              "      <td>...</td>\n",
              "      <td>69384.71</td>\n",
              "      <td>73438.88</td>\n",
              "      <td>71053.35</td>\n",
              "      <td>71112.62</td>\n",
              "      <td>74916.48</td>\n",
              "      <td>72571.58</td>\n",
              "      <td>66348.97</td>\n",
              "      <td>71063.72</td>\n",
              "      <td>67404.27</td>\n",
              "      <td>74920.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>44889.06</td>\n",
              "      <td>39191.86</td>\n",
              "      <td>40728.46</td>\n",
              "      <td>38576.36</td>\n",
              "      <td>45876.06</td>\n",
              "      <td>47034.00</td>\n",
              "      <td>46611.43</td>\n",
              "      <td>37668.32</td>\n",
              "      <td>40980.89</td>\n",
              "      <td>38466.15</td>\n",
              "      <td>...</td>\n",
              "      <td>47653.60</td>\n",
              "      <td>42625.67</td>\n",
              "      <td>40684.20</td>\n",
              "      <td>46960.73</td>\n",
              "      <td>44546.80</td>\n",
              "      <td>45410.53</td>\n",
              "      <td>47139.44</td>\n",
              "      <td>43095.68</td>\n",
              "      <td>40888.34</td>\n",
              "      <td>39615.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.70</td>\n",
              "      <td>5.40</td>\n",
              "      <td>5.28</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.27</td>\n",
              "      <td>5.61</td>\n",
              "      <td>6.00</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.34</td>\n",
              "      <td>5.87</td>\n",
              "      <td>...</td>\n",
              "      <td>5.52</td>\n",
              "      <td>5.17</td>\n",
              "      <td>5.67</td>\n",
              "      <td>5.60</td>\n",
              "      <td>5.94</td>\n",
              "      <td>5.73</td>\n",
              "      <td>5.22</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.73</td>\n",
              "      <td>5.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1207</th>\n",
              "      <td>13.00</td>\n",
              "      <td>12.87</td>\n",
              "      <td>13.27</td>\n",
              "      <td>13.04</td>\n",
              "      <td>13.19</td>\n",
              "      <td>12.53</td>\n",
              "      <td>14.31</td>\n",
              "      <td>13.33</td>\n",
              "      <td>13.63</td>\n",
              "      <td>14.55</td>\n",
              "      <td>...</td>\n",
              "      <td>12.89</td>\n",
              "      <td>12.48</td>\n",
              "      <td>12.15</td>\n",
              "      <td>13.15</td>\n",
              "      <td>12.35</td>\n",
              "      <td>13.58</td>\n",
              "      <td>13.86</td>\n",
              "      <td>12.88</td>\n",
              "      <td>13.87</td>\n",
              "      <td>13.51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1208</th>\n",
              "      <td>48.66</td>\n",
              "      <td>50.11</td>\n",
              "      <td>48.55</td>\n",
              "      <td>50.43</td>\n",
              "      <td>50.09</td>\n",
              "      <td>49.67</td>\n",
              "      <td>48.95</td>\n",
              "      <td>48.65</td>\n",
              "      <td>48.63</td>\n",
              "      <td>48.61</td>\n",
              "      <td>...</td>\n",
              "      <td>47.45</td>\n",
              "      <td>46.93</td>\n",
              "      <td>49.61</td>\n",
              "      <td>47.16</td>\n",
              "      <td>48.17</td>\n",
              "      <td>47.94</td>\n",
              "      <td>49.81</td>\n",
              "      <td>49.89</td>\n",
              "      <td>47.43</td>\n",
              "      <td>47.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1209</th>\n",
              "      <td>10160.65</td>\n",
              "      <td>9048.63</td>\n",
              "      <td>8994.94</td>\n",
              "      <td>9514.39</td>\n",
              "      <td>9814.74</td>\n",
              "      <td>10195.24</td>\n",
              "      <td>10031.47</td>\n",
              "      <td>10202.28</td>\n",
              "      <td>9152.99</td>\n",
              "      <td>9591.75</td>\n",
              "      <td>...</td>\n",
              "      <td>10413.41</td>\n",
              "      <td>9068.11</td>\n",
              "      <td>9191.80</td>\n",
              "      <td>9275.04</td>\n",
              "      <td>9848.18</td>\n",
              "      <td>9074.17</td>\n",
              "      <td>9601.74</td>\n",
              "      <td>10366.24</td>\n",
              "      <td>8997.60</td>\n",
              "      <td>9305.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1210</th>\n",
              "      <td>34.81</td>\n",
              "      <td>35.07</td>\n",
              "      <td>34.98</td>\n",
              "      <td>32.37</td>\n",
              "      <td>34.16</td>\n",
              "      <td>34.03</td>\n",
              "      <td>33.31</td>\n",
              "      <td>32.48</td>\n",
              "      <td>35.63</td>\n",
              "      <td>32.48</td>\n",
              "      <td>...</td>\n",
              "      <td>33.18</td>\n",
              "      <td>32.76</td>\n",
              "      <td>35.03</td>\n",
              "      <td>32.89</td>\n",
              "      <td>31.91</td>\n",
              "      <td>33.85</td>\n",
              "      <td>35.28</td>\n",
              "      <td>32.49</td>\n",
              "      <td>32.83</td>\n",
              "      <td>34.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1211</th>\n",
              "      <td>8489.43</td>\n",
              "      <td>7672.98</td>\n",
              "      <td>9132.14</td>\n",
              "      <td>7985.73</td>\n",
              "      <td>8226.85</td>\n",
              "      <td>8554.28</td>\n",
              "      <td>8838.87</td>\n",
              "      <td>8967.24</td>\n",
              "      <td>8635.14</td>\n",
              "      <td>8544.37</td>\n",
              "      <td>...</td>\n",
              "      <td>7747.70</td>\n",
              "      <td>8609.73</td>\n",
              "      <td>9209.48</td>\n",
              "      <td>8496.33</td>\n",
              "      <td>8724.01</td>\n",
              "      <td>8219.99</td>\n",
              "      <td>8550.86</td>\n",
              "      <td>8679.43</td>\n",
              "      <td>8389.31</td>\n",
              "      <td>8712.80</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1212 rows × 100 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f47d6831-765b-4bea-84a1-d2c563b7ba14')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-64059ac5-2d0f-46d7-9ff3-96510e577041\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64059ac5-2d0f-46d7-9ff3-96510e577041')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-64059ac5-2d0f-46d7-9ff3-96510e577041 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f47d6831-765b-4bea-84a1-d2c563b7ba14 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f47d6831-765b-4bea-84a1-d2c563b7ba14');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y = df['Class']"
      ],
      "metadata": {
        "id": "mkiLGqObm4An"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pksC383Cm9Mm",
        "outputId": "a461b779-cdce-40ff-8a5a-150090810bb2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1212,)"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xdPes6fDm9bh",
        "outputId": "3cc493fd-56a7-4658-ebae-c03cd2b09381"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       0\n",
              "1       1\n",
              "2       1\n",
              "3       0\n",
              "4       0\n",
              "       ..\n",
              "1207    1\n",
              "1208    0\n",
              "1209    1\n",
              "1210    1\n",
              "1211    0\n",
              "Name: Class, Length: 1212, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Train Test Split :**\n",
        "\n",
        "\n",
        "### Scaling Data"
      ],
      "metadata": {
        "id": "K0muPZ9KnKS0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler"
      ],
      "metadata": {
        "id": "o_TKk4pGnLbo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ss = StandardScaler()"
      ],
      "metadata": {
        "id": "NlidumKInROR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x = ss.fit_transform(x)"
      ],
      "metadata": {
        "id": "b8LfMoW5nW7f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V4o083VYnRYb",
        "outputId": "203c41d8-d7bf-4718-8f6b-f3328ceea244"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-0.45248681, -0.45361784, -0.45100881, ..., -0.45609618,\n",
              "        -0.45164274, -0.45545496],\n",
              "       [-0.45455665, -0.45556372, -0.45302369, ..., -0.45821768,\n",
              "        -0.45362255, -0.45755405],\n",
              "       [ 3.33983504,  3.24466709,  3.58338069, ...,  3.5427869 ,\n",
              "         3.27907378,  3.74616847],\n",
              "       ...,\n",
              "       [ 0.11084204,  0.0505953 ,  0.04437307, ...,  0.12533312,\n",
              "         0.04456025,  0.06450317],\n",
              "       [-0.45272112, -0.45369729, -0.45118691, ..., -0.45648861,\n",
              "        -0.45190136, -0.45569511],\n",
              "       [ 0.01782872, -0.02636986,  0.05196137, ...,  0.03036056,\n",
              "         0.01087365,  0.03123129]])"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.DataFrame(x).describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "id": "o7x7PdVGnjMn",
        "outputId": "a35660b9-2a63-4eab-bd8f-f7842bf841df"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 0             1             2             3             4   \\\n",
              "count  1.212000e+03  1.212000e+03  1.212000e+03  1.212000e+03  1.212000e+03   \n",
              "mean   2.015256e-17  2.564872e-17 -3.077846e-17  4.030513e-18  7.035077e-17   \n",
              "std    1.000413e+00  1.000413e+00  1.000413e+00  1.000413e+00  1.000413e+00   \n",
              "min   -4.546073e-01 -4.556090e-01 -4.530746e-01 -4.546130e-01 -4.555882e-01   \n",
              "25%   -4.535675e-01 -4.545631e-01 -4.520749e-01 -4.535906e-01 -4.545607e-01   \n",
              "50%   -4.378824e-01 -4.391432e-01 -4.366807e-01 -4.379970e-01 -4.390946e-01   \n",
              "75%   -1.564097e-01 -1.525405e-01 -1.548237e-01 -1.550440e-01 -1.573097e-01   \n",
              "max    6.102049e+00  5.636904e+00  6.130298e+00  5.673543e+00  5.878685e+00   \n",
              "\n",
              "                 5             6             7             8             9   \\\n",
              "count  1.212000e+03  1.212000e+03  1.212000e+03  1.212000e+03  1.212000e+03   \n",
              "mean  -3.590820e-17  6.119051e-17 -2.088538e-17 -5.276307e-17  6.595384e-17   \n",
              "std    1.000413e+00  1.000413e+00  1.000413e+00  1.000413e+00  1.000413e+00   \n",
              "min   -4.560435e-01 -4.543145e-01 -4.535741e-01 -4.536319e-01 -4.538066e-01   \n",
              "25%   -4.549987e-01 -4.533258e-01 -4.525535e-01 -4.525814e-01 -4.527634e-01   \n",
              "50%   -4.396638e-01 -4.379422e-01 -4.374886e-01 -4.372805e-01 -4.373457e-01   \n",
              "75%   -1.587631e-01 -1.522909e-01 -1.607430e-01 -1.544642e-01 -1.565755e-01   \n",
              "max    6.064569e+00  5.960488e+00  6.115950e+00  5.827060e+00  6.129492e+00   \n",
              "\n",
              "       ...            90            91            92            93  \\\n",
              "count  ...  1.212000e+03  1.212000e+03  1.212000e+03  1.212000e+03   \n",
              "mean   ... -4.396923e-17 -8.061025e-17  6.082410e-17 -3.444256e-17   \n",
              "std    ...  1.000413e+00  1.000413e+00  1.000413e+00  1.000413e+00   \n",
              "min    ... -4.589416e-01 -4.570107e-01 -4.577254e-01 -4.554417e-01   \n",
              "25%    ... -4.578983e-01 -4.559791e-01 -4.567117e-01 -4.544162e-01   \n",
              "50%    ... -4.422561e-01 -4.402947e-01 -4.411335e-01 -4.387890e-01   \n",
              "75%    ... -1.566543e-01 -1.556188e-01 -1.543520e-01 -1.603612e-01   \n",
              "max    ...  5.770964e+00  5.951789e+00  5.905232e+00  5.820126e+00   \n",
              "\n",
              "                 94            95            96            97            98  \\\n",
              "count  1.212000e+03  1.212000e+03  1.212000e+03  1.212000e+03  1.212000e+03   \n",
              "mean  -2.345026e-17 -4.396923e-17  2.308385e-17  2.931282e-18 -2.638154e-17   \n",
              "std    1.000413e+00  1.000413e+00  1.000413e+00  1.000413e+00  1.000413e+00   \n",
              "min   -4.570317e-01 -4.560267e-01 -4.560060e-01 -4.582695e-01 -4.536691e-01   \n",
              "25%   -4.559927e-01 -4.550196e-01 -4.549895e-01 -4.572366e-01 -4.526776e-01   \n",
              "50%   -4.406103e-01 -4.393418e-01 -4.395107e-01 -4.413749e-01 -4.371500e-01   \n",
              "75%   -1.569340e-01 -1.617296e-01 -1.573680e-01 -1.547966e-01 -1.608349e-01   \n",
              "max    5.883737e+00  5.765099e+00  5.957255e+00  6.097158e+00  5.820296e+00   \n",
              "\n",
              "                 99  \n",
              "count  1.212000e+03  \n",
              "mean   6.045769e-17  \n",
              "std    1.000413e+00  \n",
              "min   -4.575989e-01  \n",
              "25%   -4.565746e-01  \n",
              "50%   -4.406881e-01  \n",
              "75%   -1.570170e-01  \n",
              "max    5.968906e+00  \n",
              "\n",
              "[8 rows x 100 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-b97d9d77-1d63-4d97-98fc-fe344fdc48bd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>90</th>\n",
              "      <th>91</th>\n",
              "      <th>92</th>\n",
              "      <th>93</th>\n",
              "      <th>94</th>\n",
              "      <th>95</th>\n",
              "      <th>96</th>\n",
              "      <th>97</th>\n",
              "      <th>98</th>\n",
              "      <th>99</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>...</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "      <td>1.212000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2.015256e-17</td>\n",
              "      <td>2.564872e-17</td>\n",
              "      <td>-3.077846e-17</td>\n",
              "      <td>4.030513e-18</td>\n",
              "      <td>7.035077e-17</td>\n",
              "      <td>-3.590820e-17</td>\n",
              "      <td>6.119051e-17</td>\n",
              "      <td>-2.088538e-17</td>\n",
              "      <td>-5.276307e-17</td>\n",
              "      <td>6.595384e-17</td>\n",
              "      <td>...</td>\n",
              "      <td>-4.396923e-17</td>\n",
              "      <td>-8.061025e-17</td>\n",
              "      <td>6.082410e-17</td>\n",
              "      <td>-3.444256e-17</td>\n",
              "      <td>-2.345026e-17</td>\n",
              "      <td>-4.396923e-17</td>\n",
              "      <td>2.308385e-17</td>\n",
              "      <td>2.931282e-18</td>\n",
              "      <td>-2.638154e-17</td>\n",
              "      <td>6.045769e-17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>...</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "      <td>1.000413e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-4.546073e-01</td>\n",
              "      <td>-4.556090e-01</td>\n",
              "      <td>-4.530746e-01</td>\n",
              "      <td>-4.546130e-01</td>\n",
              "      <td>-4.555882e-01</td>\n",
              "      <td>-4.560435e-01</td>\n",
              "      <td>-4.543145e-01</td>\n",
              "      <td>-4.535741e-01</td>\n",
              "      <td>-4.536319e-01</td>\n",
              "      <td>-4.538066e-01</td>\n",
              "      <td>...</td>\n",
              "      <td>-4.589416e-01</td>\n",
              "      <td>-4.570107e-01</td>\n",
              "      <td>-4.577254e-01</td>\n",
              "      <td>-4.554417e-01</td>\n",
              "      <td>-4.570317e-01</td>\n",
              "      <td>-4.560267e-01</td>\n",
              "      <td>-4.560060e-01</td>\n",
              "      <td>-4.582695e-01</td>\n",
              "      <td>-4.536691e-01</td>\n",
              "      <td>-4.575989e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>-4.535675e-01</td>\n",
              "      <td>-4.545631e-01</td>\n",
              "      <td>-4.520749e-01</td>\n",
              "      <td>-4.535906e-01</td>\n",
              "      <td>-4.545607e-01</td>\n",
              "      <td>-4.549987e-01</td>\n",
              "      <td>-4.533258e-01</td>\n",
              "      <td>-4.525535e-01</td>\n",
              "      <td>-4.525814e-01</td>\n",
              "      <td>-4.527634e-01</td>\n",
              "      <td>...</td>\n",
              "      <td>-4.578983e-01</td>\n",
              "      <td>-4.559791e-01</td>\n",
              "      <td>-4.567117e-01</td>\n",
              "      <td>-4.544162e-01</td>\n",
              "      <td>-4.559927e-01</td>\n",
              "      <td>-4.550196e-01</td>\n",
              "      <td>-4.549895e-01</td>\n",
              "      <td>-4.572366e-01</td>\n",
              "      <td>-4.526776e-01</td>\n",
              "      <td>-4.565746e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>-4.378824e-01</td>\n",
              "      <td>-4.391432e-01</td>\n",
              "      <td>-4.366807e-01</td>\n",
              "      <td>-4.379970e-01</td>\n",
              "      <td>-4.390946e-01</td>\n",
              "      <td>-4.396638e-01</td>\n",
              "      <td>-4.379422e-01</td>\n",
              "      <td>-4.374886e-01</td>\n",
              "      <td>-4.372805e-01</td>\n",
              "      <td>-4.373457e-01</td>\n",
              "      <td>...</td>\n",
              "      <td>-4.422561e-01</td>\n",
              "      <td>-4.402947e-01</td>\n",
              "      <td>-4.411335e-01</td>\n",
              "      <td>-4.387890e-01</td>\n",
              "      <td>-4.406103e-01</td>\n",
              "      <td>-4.393418e-01</td>\n",
              "      <td>-4.395107e-01</td>\n",
              "      <td>-4.413749e-01</td>\n",
              "      <td>-4.371500e-01</td>\n",
              "      <td>-4.406881e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>-1.564097e-01</td>\n",
              "      <td>-1.525405e-01</td>\n",
              "      <td>-1.548237e-01</td>\n",
              "      <td>-1.550440e-01</td>\n",
              "      <td>-1.573097e-01</td>\n",
              "      <td>-1.587631e-01</td>\n",
              "      <td>-1.522909e-01</td>\n",
              "      <td>-1.607430e-01</td>\n",
              "      <td>-1.544642e-01</td>\n",
              "      <td>-1.565755e-01</td>\n",
              "      <td>...</td>\n",
              "      <td>-1.566543e-01</td>\n",
              "      <td>-1.556188e-01</td>\n",
              "      <td>-1.543520e-01</td>\n",
              "      <td>-1.603612e-01</td>\n",
              "      <td>-1.569340e-01</td>\n",
              "      <td>-1.617296e-01</td>\n",
              "      <td>-1.573680e-01</td>\n",
              "      <td>-1.547966e-01</td>\n",
              "      <td>-1.608349e-01</td>\n",
              "      <td>-1.570170e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>6.102049e+00</td>\n",
              "      <td>5.636904e+00</td>\n",
              "      <td>6.130298e+00</td>\n",
              "      <td>5.673543e+00</td>\n",
              "      <td>5.878685e+00</td>\n",
              "      <td>6.064569e+00</td>\n",
              "      <td>5.960488e+00</td>\n",
              "      <td>6.115950e+00</td>\n",
              "      <td>5.827060e+00</td>\n",
              "      <td>6.129492e+00</td>\n",
              "      <td>...</td>\n",
              "      <td>5.770964e+00</td>\n",
              "      <td>5.951789e+00</td>\n",
              "      <td>5.905232e+00</td>\n",
              "      <td>5.820126e+00</td>\n",
              "      <td>5.883737e+00</td>\n",
              "      <td>5.765099e+00</td>\n",
              "      <td>5.957255e+00</td>\n",
              "      <td>6.097158e+00</td>\n",
              "      <td>5.820296e+00</td>\n",
              "      <td>5.968906e+00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 100 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b97d9d77-1d63-4d97-98fc-fe344fdc48bd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-e813fd81-e96c-47c8-ae38-772142d95a29\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e813fd81-e96c-47c8-ae38-772142d95a29')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-e813fd81-e96c-47c8-ae38-772142d95a29 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b97d9d77-1d63-4d97-98fc-fe344fdc48bd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b97d9d77-1d63-4d97-98fc-fe344fdc48bd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### After Standardization Mean is Zero and Standard Deviation is One\n",
        "\n"
      ],
      "metadata": {
        "id": "N5wx8DAFnskV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "ogCmues2nuHV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train, x_test, y_train, y_test = train_test_split(x, y, train_size = 0.7, random_state= 2529)"
      ],
      "metadata": {
        "id": "D0D3qK1_n3rw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train.shape, x_test.shape, y_train.shape, y_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gSCmrItdn36T",
        "outputId": "e342759f-af10-48be-8905-20aee1a56520"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((848, 100), (364, 100), (848,), (364,))"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#  **Modeling :**"
      ],
      "metadata": {
        "id": "fZaTtgDbn_6-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression"
      ],
      "metadata": {
        "id": "d8CE9ZRaoTro"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = LogisticRegression()"
      ],
      "metadata": {
        "id": "ayrL7Kchol2p"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit (x_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "JhpsodYqos1q",
        "outputId": "fdb76d52-2358-4365-a40e-6cb184272015"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Model Evaluation :**"
      ],
      "metadata": {
        "id": "B3JvJS2MpVoh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model.intercept_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VCY5jkrQpjgw",
        "outputId": "3d728645-d315-4fc5-9f19-333fa7b3ef2a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.01583573])"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.coef_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_kSCeNEBpwAt",
        "outputId": "ebafa78c-5acd-4c98-e7af-e5c61e233917"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-1.98243827, -1.55477355, -1.60056819, -1.47899923, -1.56641209,\n",
              "        -1.28244895, -0.6988285 , -0.5095726 , -0.66786725, -0.03274921,\n",
              "         0.42624767,  0.32910212,  0.65954019,  0.48917524,  1.13891175,\n",
              "         0.65060918,  0.29250115,  0.49805892,  0.37350134,  0.34202566,\n",
              "         0.18712349, -0.2096893 ,  0.23145492,  0.24578604,  0.16196048,\n",
              "         0.52859198,  0.3446129 ,  0.34372752,  0.28391574,  0.1032625 ,\n",
              "         0.47734616,  0.22749746,  0.63539513,  0.18403706,  0.18149265,\n",
              "         0.43992833,  0.4257151 , -0.09062727,  0.4520208 , -0.01326515,\n",
              "         0.54750933,  0.53548312,  0.42562779,  0.36775193,  0.25940795,\n",
              "         0.39932599,  0.30779602, -0.01000784,  0.1395325 ,  0.49003684,\n",
              "         0.17249016,  0.18714668,  0.31185323,  0.24665782,  0.44073053,\n",
              "         0.51712628,  0.11962653,  0.13109569,  0.03113431,  0.41420085,\n",
              "         0.09144554,  0.26674781,  0.49140737,  0.06716683,  0.39003083,\n",
              "         0.30753264,  0.25565804, -0.56293024, -0.26762787,  0.2662457 ,\n",
              "         0.03878859,  0.16135115,  0.02642659, -0.25335125,  0.36117985,\n",
              "         0.25187652,  0.08548869,  0.46843907,  0.23053696,  0.40503014,\n",
              "         0.6644545 ,  0.3305387 ,  0.49880278,  0.48130654,  0.45059999,\n",
              "         0.64762569,  0.42206632, -0.23589193, -0.12415119,  0.14666313,\n",
              "        -0.49581306, -0.5535451 , -1.02256134, -1.04970396, -1.33441554,\n",
              "        -1.28132155, -1.47883892, -1.26389002, -1.27079673, -1.45873032]])"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Prediction :**"
      ],
      "metadata": {
        "id": "x7ASqr9jqCkO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = model.predict(x_test)"
      ],
      "metadata": {
        "id": "FcSI3_g1pwNO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K3WDPjIjqm6n",
        "outputId": "46ee59c9-c4ae-4eaa-e054-c55dd2c7ceea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,\n",
              "       0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n",
              "       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n",
              "       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0,\n",
              "       0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
              "       0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n",
              "       0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
              "       0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n",
              "       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n",
              "       1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n",
              "       0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Model Accuracy :**"
      ],
      "metadata": {
        "id": "mXfG96Njqr-9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import confusion_matrix, classification_report, accuracy_score"
      ],
      "metadata": {
        "id": "PjAu4b38q2qw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test,y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_MWoJN2KrD72",
        "outputId": "2601d2db-a756-4cc1-b3de-882eeda3c771"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[176   4]\n",
            " [ 92  92]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Yp5jx7NHrPiJ",
        "outputId": "817d2ef0-084e-444b-9109-d266b07f1fa2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.66      0.98      0.79       180\n",
            "           1       0.96      0.50      0.66       184\n",
            "\n",
            "    accuracy                           0.74       364\n",
            "   macro avg       0.81      0.74      0.72       364\n",
            "weighted avg       0.81      0.74      0.72       364\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy_score(y_test,y_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6MTout7zraE0",
        "outputId": "4690e75a-1fdc-440c-a99c-8aaf51e87670"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7362637362637363"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Explanation :**\n"
      ],
      "metadata": {
        "id": "22LWzL49rqUC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1. Accuracy in Machine Leaning Model is used for Classification, Number of correct predictions\n",
        "\n",
        "###2. It is the ratio of number of correct predictions to the total number of predictions\n",
        "\n",
        "###3. In machine learning model accuracy score above 0.73 is treated as good-to-go-model\n",
        "\n",
        "###4. Therefore Machine learning Model is 73% accurate in correct predictions"
      ],
      "metadata": {
        "id": "RoZQLlaxrqk9"
      }
    }
  ]
}